term.setCursorPos(1,1)
term.setBackgroundColor(colors.black)
term.setTextColor(colors.white)
term.clear()

term.write("Login: " .. textutils.formatTime(os.time(),true) .. "-" .. os.day() .. " on ttys000")
print()

local sver = "1.0"

term.write("FurnaceOS " .. sver)

local cpath = "/"
local run = true
local lastcmd = ""
local termfg = colors.white
local termbg = colors.black

function setfg(fg)
  termfg = fg
end

function setbg(bg)
  termbg = bg
end

function setpath(pth)
  cpath = pth
end

function setrun(rn)
  run = rn
end

function readpath()
  return cpath
end

function getver()
  return sver
end

local function tabletostring(tbl)
  temp = ""
  for _, v in pairs(tbl) do
    temp = temp .. v .. " "
  end
  return temp
end

function resolvelocal(path)
  return cpath .. path
end

function resolvebuiltin(path)
  return "/furnace/builtin/" .. path
end

function resolveaddon(path)
  return "/furnace/addon/" .. path
end

function ispath(path)
  res = string.find(path,"/")
  if res ~= nil then
    return true
  else
    return false
  end
end

function resolve(path)
  if ispath(path) then
    return path
  elseif fs.exists(resolvelocal(path)) then
    return resolvelocal(path)
  else
    return false
  end
end

function run(string,args)
  --print(string .. " " .. args)
  shell.run(string)
end

function action(wd)
  if wd == "" then
    return
  end

  local cmdtable = {}

  for word in wd:gmatch("%S+") do table.insert(cmdtable,word) end

  local cmd = cmdtable[1]
  table.remove(cmdtable,1)

  if ispath(cmd) then
    run(cmd .. " " .. tabletostring(cmdtable))

  elseif fs.exists(resolvebuiltin(cmd)) then
    run(resolvebuiltin(cmd) .. " " .. tabletostring(cmdtable))

  elseif fs.exists(resolveaddon(cmd)) then
    run(resolveaddon(cmd) .. " " .. tabletostring(cmdtable))

  elseif fs.exists(resolvelocal(cmd)) then
    run(resolvelocal(cmd) .. " " .. tabletostring(cmdtable))
  else
    print(cmd .. ": command not found")
  end
end


print()
print()

while run do
  term.setTextColor(termfg)
  term.setBackgroundColor(termbg)
  term.write(cpath .. " $ ")
  x = read()
  if x == "!" then
    action(lastcmd)
  else
    lastcmd = x
    action(x)
  end
  term.setTextColor(termfg)
  term.setBackgroundColor(termbg)
end
